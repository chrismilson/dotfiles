[alias]

	# Shortened versions of common commands
	co = checkout
	ll = log --pretty=nice
	c = commit
	b = branch

	# `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
	# `git gc`: cleanup unneccesary files and optimise the local repository
	# `git clean -df`: remove untracked files and directories from the working tree
	# `git stash clear`: remove all stashed states
	trim = !git remote prune origin && git gc
	cleanup = !git clean -df && git stash clear

	# Add untracked files, remove deleted files, and show status
	adda = !git add -A && git status

	# Fetch a repository ($1) and checkout its ref ($2) HEAD
	# use `git browse https://github.com/chrismilson/dotfiles <commit-ish>`
	browse = !bash -c 'git fetch $1 ${2:-HEAD} && git checkout FETCH_HEAD' -

	# Remove branches that habe already been merged with main
	delmerged = !git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d

	# Diff what is staged for the next commit
	diffc = diff --cached
	# Diff overview
	diffst = diff --stat

	# Custom graph log
	graph = log --pretty=nice --date-order --graph
	# Custom graph log for all branches
	grapha = log --pretty=nice --date-order --graph --all

	# Fetch and checkout a Github Pull Request from a remote (defaults to 
	# `origin`)
	gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -

	# Custom pretty log
	loga = log --pretty=nice --date-order

	# Amend commit without editing
	recommit = commit --amend --no-edit

	# Find out who is currently active on the repository
	# Displays committers in descending order of number of commits
	who = shortlog --numbered --summary --email --no-merges

	# Show the user email for the current repository
	whoami = !bash -c 'echo "$(git config user.name) - $(git config user.email)"'

[branch]

	# Show the most recently changed branches first
	sort = -committerdate

[color]

	ui = auto
	interactive = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold	# line info
	old = red			# deletions
	new = green			# additions

# [commit]

# 	# See https://help.github.com/articles/signing-commits-using-gpg/
# 	gpgsign = true

[core]

	# Use custom global `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

[diff "bin"]

	# Use `hexdump` to diff binary files
	textconv = hexdump -v -C

[difftool]

	prompt = false

[help]

	# Autmoatically correct and execute mistyped commands
	autocorrect = 1

[init]

	defaultBranch = main

[pretty]

	nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"

[push]

	default = simple